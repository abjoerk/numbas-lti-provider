# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-10-10 08:59
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion

def make_lti_contexts(apps, schema_editor):
    Resource = apps.get_model('numbas_lti', 'Resource')
    LTIContext = apps.get_model('numbas_lti', 'LTIContext')
    LTIConsumer = apps.get_model('numbas_lti', 'LTIConsumer')

    for r in Resource.objects.all():
        consumer = LTIConsumer.objects.filter(ltiuserdata__resource=r).distinct().first()
        if consumer is None:
            consumer = LTIConsumer.objects.filter(ltiuserdata__resource__tool_consumer_instance_guid=r.tool_consumer_instance_guid).distinct().first()
        try:
            context = LTIContext.objects.get(instance_guid=r.tool_consumer_instance_guid)
        except LTIContext.DoesNotExist:
            context = LTIContext.objects.create(consumer=consumer, context_id='', name='', label='', instance_guid=r.tool_consumer_instance_guid)

        r.context = context
        r.save()

def undo_remove_resource_instance_guid(apps, schema_editor):
    Resource = apps.get_model('numbas_lti', 'Resource')

    for r in Resource.objects.all():
        r.tool_consumer_instance_guid = r.context.instance_guid
        r.save()

def set_resource_title(apps, schema_editor):
    Resource = apps.get_model('numbas_lti', 'Resource')

    for r in Resource.objects.all():
        if r.exam is not None:
            r.title = r.exam.title
            r.save()

class Migration(migrations.Migration):

    dependencies = [
        ('numbas_lti', '0035_auto_20171010_0839'),
    ]

    operations = [
        migrations.CreateModel(
            name='LTIContext',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('context_id', models.CharField(max_length=300)),
                ('name', models.CharField(max_length=300)),
                ('label', models.CharField(max_length=300)),
                ('instance_guid', models.CharField(max_length=300)),
                ('consumer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contexts', to='numbas_lti.LTIConsumer')),
            ],
        ),
        migrations.AddField(
            model_name='resource',
            name='context',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resources', to='numbas_lti.LTIContext'),
        ),
        migrations.AddField(
            model_name='resource',
            name='description',
            field=models.TextField(default=''),
        ),
        migrations.AddField(
            model_name='resource',
            name='title',
            field=models.CharField(default='', max_length=300),
        ),
        migrations.AlterField(
            model_name='resource',
            name='tool_consumer_instance_guid',
            field=models.CharField(default='', max_length=300),
        ),
        migrations.RunPython(make_lti_contexts,undo_remove_resource_instance_guid),
        migrations.RemoveField(
            model_name='resource',
            name='tool_consumer_instance_guid',
        ),
        migrations.RunPython(set_resource_title,migrations.RunPython.noop),
    ]
